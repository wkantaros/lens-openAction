export const UTB_WRAPPER_ABI = [
  {
    type: 'constructor',
    inputs: [
      { name: '_trustedForwarder', type: 'address', internalType: 'address' },
    ],
    stateMutability: 'nonpayable',
  },
  { type: 'receive', stateMutability: 'payable' },
  {
    type: 'function',
    name: 'bridgeAndExecute',
    inputs: [
      {
        name: 'wrapperInstructions',
        type: 'tuple',
        internalType: 'struct TokenWrapperInstructions',
        components: [
          { name: 'from', type: 'address', internalType: 'address' },
          { name: 'srcToken', type: 'address', internalType: 'address' },
          { name: 'amountIn', type: 'uint256', internalType: 'uint256' },
          { name: 'erc20ForFee', type: 'uint256', internalType: 'uint256' },
          { name: 'erc20Needed', type: 'uint256', internalType: 'uint256' },
          { name: 'nativeNeeded', type: 'uint256', internalType: 'uint256' },
          { name: 'deadline', type: 'uint256', internalType: 'uint256' },
          { name: 'nonce', type: 'uint256', internalType: 'uint256' },
          { name: 'signature', type: 'bytes', internalType: 'bytes' },
          { name: 'swapPath', type: 'bytes', internalType: 'bytes' },
        ],
      },
      {
        name: 'instructions',
        type: 'tuple',
        internalType: 'struct BridgeInstructions',
        components: [
          {
            name: 'preBridge',
            type: 'tuple',
            internalType: 'struct SwapInstructions',
            components: [
              { name: 'swapperId', type: 'uint8', internalType: 'uint8' },
              { name: 'swapPayload', type: 'bytes', internalType: 'bytes' },
            ],
          },
          {
            name: 'postBridge',
            type: 'tuple',
            internalType: 'struct SwapInstructions',
            components: [
              { name: 'swapperId', type: 'uint8', internalType: 'uint8' },
              { name: 'swapPayload', type: 'bytes', internalType: 'bytes' },
            ],
          },
          { name: 'bridgeId', type: 'uint8', internalType: 'uint8' },
          { name: 'dstChainId', type: 'uint256', internalType: 'uint256' },
          { name: 'target', type: 'address', internalType: 'address' },
          { name: 'paymentOperator', type: 'address', internalType: 'address' },
          { name: 'refund', type: 'address', internalType: 'address' },
          { name: 'payload', type: 'bytes', internalType: 'bytes' },
          { name: 'additionalArgs', type: 'bytes', internalType: 'bytes' },
        ],
      },
      {
        name: 'feeData',
        type: 'tuple',
        internalType: 'struct FeeData',
        components: [
          { name: 'appId', type: 'bytes4', internalType: 'bytes4' },
          { name: 'affiliateId', type: 'bytes4', internalType: 'bytes4' },
          { name: 'bridgeFee', type: 'uint256', internalType: 'uint256' },
          {
            name: 'appFees',
            type: 'tuple[]',
            internalType: 'struct Fee[]',
            components: [
              { name: 'recipient', type: 'address', internalType: 'address' },
              { name: 'token', type: 'address', internalType: 'address' },
              { name: 'amount', type: 'uint256', internalType: 'uint256' },
            ],
          },
        ],
      },
      { name: 'signature', type: 'bytes', internalType: 'bytes' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'core',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'isTrustedForwarder',
    inputs: [{ name: 'forwarder', type: 'address', internalType: 'address' }],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'owner',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'permit2',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'renounceOwnership',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setFields',
    inputs: [
      { name: '_core', type: 'address', internalType: 'address' },
      { name: '_permit2', type: 'address', internalType: 'address' },
      { name: '_uniswapRouter', type: 'address', internalType: 'address' },
      { name: '_wrappedNative', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'swapAndExecute',
    inputs: [
      {
        name: 'wrapperInstructions',
        type: 'tuple',
        internalType: 'struct TokenWrapperInstructions',
        components: [
          { name: 'from', type: 'address', internalType: 'address' },
          { name: 'srcToken', type: 'address', internalType: 'address' },
          { name: 'amountIn', type: 'uint256', internalType: 'uint256' },
          { name: 'erc20ForFee', type: 'uint256', internalType: 'uint256' },
          { name: 'erc20Needed', type: 'uint256', internalType: 'uint256' },
          { name: 'nativeNeeded', type: 'uint256', internalType: 'uint256' },
          { name: 'deadline', type: 'uint256', internalType: 'uint256' },
          { name: 'nonce', type: 'uint256', internalType: 'uint256' },
          { name: 'signature', type: 'bytes', internalType: 'bytes' },
          { name: 'swapPath', type: 'bytes', internalType: 'bytes' },
        ],
      },
      {
        name: 'instructions',
        type: 'tuple',
        internalType: 'struct SwapAndExecuteInstructions',
        components: [
          {
            name: 'swapInstructions',
            type: 'tuple',
            internalType: 'struct SwapInstructions',
            components: [
              { name: 'swapperId', type: 'uint8', internalType: 'uint8' },
              { name: 'swapPayload', type: 'bytes', internalType: 'bytes' },
            ],
          },
          { name: 'target', type: 'address', internalType: 'address' },
          { name: 'paymentOperator', type: 'address', internalType: 'address' },
          { name: 'refund', type: 'address', internalType: 'address' },
          { name: 'payload', type: 'bytes', internalType: 'bytes' },
        ],
      },
      {
        name: 'feeData',
        type: 'tuple',
        internalType: 'struct FeeData',
        components: [
          { name: 'appId', type: 'bytes4', internalType: 'bytes4' },
          { name: 'affiliateId', type: 'bytes4', internalType: 'bytes4' },
          { name: 'bridgeFee', type: 'uint256', internalType: 'uint256' },
          {
            name: 'appFees',
            type: 'tuple[]',
            internalType: 'struct Fee[]',
            components: [
              { name: 'recipient', type: 'address', internalType: 'address' },
              { name: 'token', type: 'address', internalType: 'address' },
              { name: 'amount', type: 'uint256', internalType: 'uint256' },
            ],
          },
        ],
      },
      { name: 'signature', type: 'bytes', internalType: 'bytes' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'transferOwnership',
    inputs: [{ name: 'newOwner', type: 'address', internalType: 'address' }],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'trustedForwarder',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'uniswapRouter',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'wrappedNative',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'event',
    name: 'OwnershipTransferred',
    inputs: [
      {
        name: 'previousOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'newOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
] as const;
